### Starting build.
# Target: src/main.ml.depends, tags: { package(oUnit), extension:ml, file:src/main.ml, include, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -modules src/main.ml > src/main.ml.depends
# Target: src/awesome.mli.depends, tags: { package(oUnit), extension:mli, file:src/awesome.mli, include, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -modules src/awesome.mli > src/awesome.mli.depends
# Target: src/awesome.cmi, tags: { package(oUnit), byte, compile, extension:mli, file:src/awesome.mli, include, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -I src -o src/awesome.cmi src/awesome.mli
# Target: src/main.cmo, tags: { package(oUnit), byte, compile, extension:cmo, extension:ml, file:src/main.cmo, file:src/main.ml, implem, include, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -I src -o src/main.cmo src/main.ml
# Target: src/awesome.ml.depends, tags: { package(oUnit), extension:ml, file:src/awesome.ml, include, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -modules src/awesome.ml > src/awesome.ml.depends
# Target: src/awesome.cmx, tags: { package(oUnit), compile, extension:cmx, extension:ml, file:src/awesome.cmx, file:src/awesome.ml, implem, include, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit -I src -o src/awesome.cmx src/awesome.ml
# Target: src/main.cmx, tags: { package(oUnit), compile, extension:cmx, extension:ml, file:src/main.cmx, file:src/main.ml, implem, include, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit -I src -o src/main.cmx src/main.ml
# Target: src/main.native, tags: { package(oUnit), dont_link_with, extension:native, file:src/main.native, include, link, native, ocaml, program, quiet, traverse }
ocamlfind ocamlopt -linkpkg -package oUnit -I src src/awesome.cmx src/main.cmx -o src/main.native
# Compilation successful.
